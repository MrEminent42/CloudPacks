package me.MrEminent42.cp.Config;

import java.io.File;

import me.MrEminent42.cp.CloudPacksPlugin;
import me.MrEminent42.cp.objects.CloudPack;

public class CloudPackConfig extends ConfigWrapper {
	
	static CloudPacksPlugin plugin = CloudPacksPlugin.getPlugin(CloudPacksPlugin.class);

	// USE WHEN READING A FILE TO LOAD PACKS \\
	/**
	 * Create a config from an empty file. Does not add values. Used to see values of packs.
	 * @param file
	 */
	public CloudPackConfig(File file) {
		super(plugin, "/plugins/CloudPack/storage/", file.getName());
		reloadConfig();
	}
	
	// USE WHEN CREATING A PACK \\
	/**
	 * Creating a config from a pack. Adds all values according to pack.
	 * @param pack
	 */
    public CloudPackConfig(CloudPack pack) {
    	super(plugin, "/plugins/CloudPack/storage/", pack.getID().toString() + ".pack");
    	getConfig().set("name", pack.getName());
    	getConfig().set("owner", pack.getOwner().toString());
    	getConfig().set("rows", pack.getRows());
    	getConfig().set("id", pack.getID());
    	getConfig().set("contents", pack.getContents());
    	
    	createFile("", ""
    			+ "\nCloudPack Name: " + pack.getName()
    			+ "\nCloudPack ID: " + pack.getID().toString()
    			+ "\n\nWARNING: DO NOT EDIT THIS FILE WHEN THE SERVER IS RUNNING."
    			+ "\nALL changes will be overriden when shutting down the server or reloading."
    			+ "\nIF you need to make a change to this file, shut down your server first!");
    }
    
    public int getRows() {
    	return getConfig().getInt("rows");
    }
	
}